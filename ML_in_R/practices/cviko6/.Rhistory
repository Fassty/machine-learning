source("ML.2019-10.dt.tutor.simple.R")
library(randomForest)
library(randomForest)
a = c(1)
a
a + 2
a
ntrees[1] <- 1
ntrees = c()
ntrees[1] <- 1
ntrees
ntrees[2] <- 2
ntrees
source("ML.2019-10.dt.tutor.simple.R")
source("ML.2019-10.dt.tutor.simple.R")
source("ML.2019-10.dt.tutor.simple.R")
?plot
?plot.par
??plot.par
?par
source("ML.2019-10.dt.tutor.simple.R")
source("ML.2019-10.dt.tutor.simple.R")
source("ML.2019-10.dt.tutor.simple.R")
source("ML.2019-10.dt.tutor.simple.R")
source("ML.2019-10.dt.tutor.simple.R")
source("ML.2019-10.dt.tutor.simple.R")
source("ML.2019-10.dt.tutor.simple.R")
rf
source("ML.2019-10.dt.tutor.simple.R")
rf
source("ML.2019-10.dt.tutor.simple.R")
rf
source("ML.2019-10.dt.tutor.simple.R")
rf
str(F)
source("ML.2019-10.dt.tutor.simple.R")
rf
rf
source("ML.2019-10.dt.tutor.simple.R")
rf
accs[20]
cfm
model2.cm
?rf
?predict.randomForest
source("ML.2019-10.dt.tutor.simple.R")
source("ML.2019-10.dt.tutor.simple.R")
source("ML.2019-10.dt.tutor.simple.R")
pred
pred$individual
table(pred$individual)
pred$individual
pred$individual[20]
pred$individual[20,]
table(pred$individual[20,])
table(pred$individual[,20])
table(pred$individual[,30])
str(pred)
?predict.randomForest
source("ML.2019-10.dt.tutor.simple.R")
pred$individual[20,]
pred$individual[,20]
table(pred$individual[,20])
table(pred$individual[20,])
pred
str(pred)
pred$aggregate[20]
plot(x = 1:1000, pred$aggregate)
plot(x = 1:1000, pred$aggregate[,1])
library(ISLR)
str(Caravan)
data = Caraven
data = Caravan
test = read.csv("caravan.test.1000.csv", sep='\t')
str(test)
dim(test)
test = read.csv("caravan.test.1000.csv", sep='\t', head=F)
?read.csv
test = read.csv("caravan.test.1000.csv", sep='\t', header=F)
test = read.csv("caravan.test.1000.csv", sep='\t', header=False)
F
del(F)
rm(F)
F
test = read.csv("caravan.test.1000.csv", sep='\t', header=F)
dim(test)
rf = randomForest(Purchase ~ ., data=data, ntree=100)
rf
pred = predict(rf, test, type="class")
table(data$Purchase)
?randomForest
rf = randomForest(Purchase ~ ., data=data, ntree=100, cutoff=0.2)
rf = randomForest(Purchase ~ ., data=data, ntree=100)
pred = predict(rf, test, type="class", cutoff=0.2)
?randomForest
pred = predict(rf, test, type="class", cutoff=c(0.2, 0.8))
rf = randomForest(Purchase ~ ., data=data, ntree=100, cutoff=c(0.2, 0.8))
rf
